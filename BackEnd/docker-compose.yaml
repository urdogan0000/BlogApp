version: '3.7'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "your_redis_password"]
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # Enables KRaft mode
      KAFKA_PROCESS_ROLES: "controller,broker"  # Kafka acts as both broker and controller
      KAFKA_NODE_ID: 1  # Unique ID for this Kafka instance
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Controller voters configuration
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"  # Kafka log location
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Auto-create topics
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # One replica for offsets topic
      KAFKA_LOG_RETENTION_HOURS: 168  # Retain logs for 7 days
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalance
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"  # Unique Kafka cluster ID
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/var/lib/kafka/data

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  mongo-ui:
    image: mongo-express:latest
    container_name: mongo-ui
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
    depends_on:
      - mongo

  redis-ui:
    image: redislabs/redisinsight:latest
    container_name: redis-ui
    restart: always
    ports:
      - "8001:8001"
    environment:
      REDISINSIGHT_PASS: admin
      REDIS_PASSWORD: your_redis_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    volumes:
      - redisinsight_data:/db

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3005:3005"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin

volumes:
  postgres_data:
  mongo_data:
  kafka_data:
  redis_data:
  redisinsight_data:
  prometheus_data:

